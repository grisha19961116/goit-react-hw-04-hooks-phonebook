{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactList","contacts","onRemove","onRemoveLocal","length","map","id","name","phone","onClick","className","style","button__delete","ContactForm","onAdd","onCheckUnique","useState","setName","setPhone","handleChangeForm","target","value","console","log","onSubmit","e","preventDefault","toast","newContact","uuidv4","savedSettings","localStorage","getItem","parsedSettings","JSON","parse","array","setItem","stringify","type","placeholder","onChange","Filter","filter","input__filter","App","setContacts","useEffect","number","stringifyContacts","setFilter","prevState","isExistContact","find","contact","alert","toLowerCase","includes","deleteContact","arrayDeleteById","serializedState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.947496ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button__delete\":\"ContactList_button__delete__2BM8o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input__filter\":\"Filter_input__filter__1HrcU\"};","import style from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onRemove, onRemoveLocal }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul>\n      {contacts.map(({ id, name, phone }) => {\n        return (\n          <li key={id}>\n            {name} : {phone}{' '}\n            <button\n              onClick={() => {\n                onRemoveLocal(id);\n                onRemove(id);\n              }}\n              className={style.button__delete}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default ContactList;\n","import style from './ContactForm.module.css';\nimport { toast } from 'react-toastify';\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction ContactForm({ onAdd, onCheckUnique }) {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        console.log('Sorry, we are not have ' + name + '.');\n    }\n  };\n\n  const validateFrom = () => {\n    if (!name || !phone) {\n      toast('Some filed is empty');\n      return false;\n    }\n\n    return onCheckUnique(name);\n  };\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  const handleFromSubmit = e => {\n    e.preventDefault();\n    const isValidForm = validateFrom();\n\n    if (!isValidForm) return;\n\n    const newContact = { id: uuidv4(), name, phone };\n\n    onAdd(newContact);\n    resetForm();\n\n    const savedSettings = localStorage.getItem('name');\n    const parsedSettings = JSON.parse(savedSettings);\n\n    if (parsedSettings === null || parsedSettings.length === 0) {\n      localStorage.setItem('name', JSON.stringify([newContact]));\n      return;\n    }\n\n    if (parsedSettings.length !== 0) {\n      const array = [...parsedSettings, newContact];\n      localStorage.setItem('name', JSON.stringify(array));\n      return;\n    }\n  };\n\n  return (\n    <form onSubmit={handleFromSubmit}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={handleChangeForm}\n      ></input>\n      <input\n        type=\"tel\"\n        name=\"phone\"\n        placeholder=\"Enter phone number\"\n        value={phone}\n        onChange={handleChangeForm}\n      ></input>\n      <button type=\"submit\">Add Contact</button>\n    </form>\n  );\n}\nexport default ContactForm;\n","import style from './Filter.module.css';\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <input\n      className={style.input__filter}\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={({ target }) => onChange(target.value)}\n      placeholder=\"Enter name for Search\"\n    />\n  );\n};\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport ContactList from './components/ContactList/ContactList.js';\nimport ContactForm from './components/ContactForm/ContactForm.js';\nimport Filter from './components/Filter/Filter.js';\nimport style from './App.module.css';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n\n  useEffect(() => {\n    const savedSettings = localStorage.getItem('name');\n    const parsedSettings = JSON.parse(savedSettings);\n\n    if (parsedSettings === null) {\n      setContacts([\n        { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n        { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      ]);\n\n      return;\n    }\n\n    if (parsedSettings.length === 0) {\n      return;\n    }\n\n    setContacts(parsedSettings);\n  }, []);\n\n  useEffect(() => {\n    const stringifyContacts = JSON.stringify(contacts);\n    localStorage.setItem('name', stringifyContacts);\n  }, [contacts]);\n\n  const handleAddContact = newContact => {\n    setContacts(prevState => [...prevState, newContact]);\n  };\n\n  const handleCheckUniqueContact = name => {\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    isExistContact && alert('Contact is already exist');\n\n    return !isExistContact;\n  };\n\n  const handleRemoveContact = id => {\n    const deleteContact = contacts.filter(contact => contact.id !== id);\n    setContacts(deleteContact);\n  };\n\n  const handleRemoveContactFromLocalStor = id => {\n    const savedSettings = localStorage.getItem('name');\n    const parsedSettings = JSON.parse(savedSettings);\n\n    if (parsedSettings.length < 0) {\n      return;\n    }\n\n    if (parsedSettings === null) {\n      return;\n    }\n\n    const arrayDeleteById = parsedSettings.filter(contact => contact.id !== id);\n    const serializedState = JSON.stringify(arrayDeleteById);\n    localStorage.setItem('name', serializedState);\n  };\n\n  const [filter, setFilter] = useState('');\n\n  const handleFilterChange = filter => setFilter(filter);\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  return (\n    <>\n      <h2>From Contact</h2>\n      <ContactForm\n        onAdd={handleAddContact}\n        onCheckUnique={handleCheckUniqueContact}\n      />\n      <h2>Contacts list</h2>\n      <Filter filter={filter} onChange={handleFilterChange} />\n      <ContactList\n        contacts={getVisibleContacts()}\n        onRemove={handleRemoveContact}\n        onRemoveLocal={handleRemoveContactFromLocalStor}\n      />\n      <ToastContainer></ToastContainer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}